[gd_scene load_steps=6 format=2]

[ext_resource path="res://visuals/flag.svg" type="Texture" id=1]

[sub_resource type="PlaneMesh" id=1]
size = Vector2( 1, 0.6 )
subdivide_width = 30
subdivide_depth = 30

[sub_resource type="Shader" id=2]
code = "shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;

uniform float speed = 2.0;
uniform float frequency_y = 5.0;
uniform float frequency_x = 2.5;
uniform float frequency_z = 2.5;
uniform float amplitude_y = 0.1;
uniform float amplitude_x = 0.05;
uniform float amplitude_z = 0.05;
uniform float inclination = -0.04;

uniform sampler2D tex: hint_albedo;

void fragment(){
	vec4 albedo_tex = texture(tex, UV);
	ALBEDO = vec3(1.0) * albedo_tex.rgb;
}

void vertex(){
	VERTEX.y += sin((UV.x - TIME * speed) * frequency_y) * amplitude_y * UV.x;
	VERTEX.x += cos((UV.y - TIME * speed) * frequency_x) * amplitude_x * 0.1 * UV.x;
	VERTEX.z += sin((UV.x - TIME * speed) * frequency_z) * amplitude_z * UV.x;
	VERTEX.x -= (1.0 - UV.y) * inclination;
}"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )
shader_param/speed = 1.0
shader_param/frequency_y = 5.0
shader_param/frequency_x = 2.5
shader_param/frequency_z = 2.5
shader_param/amplitude_y = 0.1
shader_param/amplitude_x = 0.05
shader_param/amplitude_z = 0.05
shader_param/inclination = -0.039
shader_param/tex = ExtResource( 1 )

[sub_resource type="Environment" id=4]
background_mode = 1
ambient_light_color = Color( 1, 1, 1, 1 )
ambient_light_sky_contribution = 0.0
tonemap_mode = 3

[node name="Flag3D" type="Spatial"]

[node name="Flag" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, -8.4878e-09, 0.194178 )
mesh = SubResource( 1 )
material/0 = SubResource( 3 )

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 4 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0.636 )
fov = 90.0
