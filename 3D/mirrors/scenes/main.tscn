[gd_scene load_steps=19 format=2]

[ext_resource path="res://scenes/scene.tscn" type="PackedScene" id=1]
[ext_resource path="res://visuals/textures/texture_11.png" type="Texture" id=2]
[ext_resource path="res://visuals/textures/texture_08.png" type="Texture" id=3]
[ext_resource path="res://visuals/textures/texture_02.png" type="Texture" id=4]
[ext_resource path="res://scenes/cameras.gd" type="Script" id=5]

[sub_resource type="SpatialMaterial" id=1]
flags_world_triplanar = true
albedo_color = Color( 0.435294, 0.435294, 0.435294, 1 )
albedo_texture = ExtResource( 3 )
uv1_triplanar = true

[sub_resource type="SpatialMaterial" id=2]
flags_world_triplanar = true
albedo_color = Color( 1, 0.85098, 0.164706, 1 )
albedo_texture = ExtResource( 2 )

[sub_resource type="SpatialMaterial" id=3]
albedo_color = Color( 0.917647, 0.152941, 0.152941, 1 )
albedo_texture = ExtResource( 4 )
uv1_triplanar = true

[sub_resource type="SpatialMaterial" id=4]
albedo_color = Color( 0, 0.741176, 1, 1 )
albedo_texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeInput" id=10]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeVectorOp" id=11]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( -1, 1, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=12]
default_input_values = [ 0, Vector3( 1, 0, 0 ), 1, Vector3( 0, 0, 0 ) ]

[sub_resource type="VisualShaderNodeTextureUniform" id=13]
uniform_name = "MirrorTexture"
texture_type = 1

[sub_resource type="VisualShader" id=14]
resource_local_to_scene = true
code = "shader_type spatial;
render_mode specular_schlick_ggx, unshaded;

uniform sampler2D MirrorTexture : hint_albedo;



void vertex() {
// Output:0

}

void fragment() {
// Input:2
	vec3 n_out2p0 = vec3(SCREEN_UV, 0.0);

// VectorOp:3
	vec3 n_in3p1 = vec3(-1.00000, 1.00000, 1.00000);
	vec3 n_out3p0 = n_out2p0 * n_in3p1;

// VectorOp:4
	vec3 n_in4p0 = vec3(1.00000, 0.00000, 0.00000);
	vec3 n_out4p0 = n_in4p0 + n_out3p0;

// TextureUniform:5
	vec3 n_out5p0;
	float n_out5p1;
	{
		vec4 n_tex_read = texture(MirrorTexture, n_out4p0.xy);
		n_out5p0 = n_tex_read.rgb;
		n_out5p1 = n_tex_read.a;
	}

// Output:0
	ALBEDO = n_out5p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 0, 75 )
flags/unshaded = true
nodes/fragment/0/position = Vector2( 1080, 20 )
nodes/fragment/2/node = SubResource( 10 )
nodes/fragment/2/position = Vector2( 400, 160 )
nodes/fragment/3/node = SubResource( 11 )
nodes/fragment/3/position = Vector2( 640, 100 )
nodes/fragment/4/node = SubResource( 12 )
nodes/fragment/4/position = Vector2( 640, 240 )
nodes/fragment/5/node = SubResource( 13 )
nodes/fragment/5/position = Vector2( 840, 140 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 0, 3, 0, 4, 1, 4, 0, 5, 0, 5, 0, 0, 0 )

[sub_resource type="ViewportTexture" id=18]

[sub_resource type="ShaderMaterial" id=15]
resource_local_to_scene = true
shader = SubResource( 14 )
shader_param/MirrorTexture = SubResource( 18 )

[sub_resource type="QuadMesh" id=9]
material = SubResource( 15 )
size = Vector2( 4, 2.25 )

[sub_resource type="Environment" id=17]
background_mode = 1
ambient_light_color = Color( 1, 1, 1, 1 )
ambient_light_energy = 3.9
ambient_light_sky_contribution = 0.0

[node name="Main" type="Spatial"]

[node name="MirrorDuplicate" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -13.3472 )

[node name="Scene" parent="MirrorDuplicate" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 1.5, 0, 0 )

[node name="MirroredScene" parent="MirrorDuplicate" instance=ExtResource( 1 )]
transform = Transform( -1, 0, 0, 0, 1, 0, 0, 0, 1, -1.5, 0, 0 )

[node name="MirrorViewport" type="Spatial" parent="."]

[node name="Scene" type="Spatial" parent="MirrorViewport"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 1.5, 0, 0 )

[node name="Room" type="CSGBox" parent="MirrorViewport/Scene"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 2.49941, 0.777294, 0 )
invert_faces = true
width = 8.0
height = 3.5
depth = 7.51606
material = SubResource( 1 )

[node name="Box" type="CSGBox" parent="MirrorViewport/Scene"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.822643, -0.728157, 0.0991445 )
width = 0.710675
height = 0.546315
depth = 0.624675
material = SubResource( 2 )

[node name="CSGSphere" type="CSGSphere" parent="MirrorViewport/Scene"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.640614, -0.995906 )
radius = 0.363925
radial_segments = 24
rings = 12
material = SubResource( 3 )

[node name="CSGCylinder" type="CSGCylinder" parent="MirrorViewport/Scene"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.464394, -0.496849, 0.877779 )
radius = 0.262888
sides = 24
material = SubResource( 4 )

[node name="Cameras" type="Spatial" parent="MirrorViewport/Scene"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -1.5, 0, 0 )
script = ExtResource( 5 )

[node name="Camera" type="Camera" parent="MirrorViewport/Scene/Cameras"]
transform = Transform( 0.306493, 0, 0.951873, 0, 1, 0, -0.951873, 0, 0.306493, 5.54204, 0.417, 0.573832 )
current = true
fov = 50.0

[node name="Viewport" type="Viewport" parent="MirrorViewport/Scene/Cameras"]
size = Vector2( 1280, 720 )
keep_3d_linear = true
render_target_update_mode = 3

[node name="MirrorCamera" type="Camera" parent="MirrorViewport/Scene/Cameras/Viewport"]
transform = Transform( 0.306493, 0, -0.951873, 0, 1, 0, 0.951873, 0, 0.306493, -5.54204, 0.417, 0.573832 )
fov = 50.0

[node name="Mirror" type="MeshInstance" parent="MirrorViewport/Scene/Cameras"]
transform = Transform( -1.62921e-07, 0, 1, 0, 1, 0, -1, 0, -1.62921e-07, 0.0323201, 0.400432, -0.0766552 )
mesh = SubResource( 9 )
material/0 = null

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 17 )
